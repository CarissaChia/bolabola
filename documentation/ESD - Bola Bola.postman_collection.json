{
	"info": {
		"_postman_id": "ec20c203-e7e1-44fc-a730-b78aa21a84e1",
		"name": "ESD - Bola Bola",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23749162"
	},
	"item": [
		{
			"name": "Seat Reservation",
			"item": [
				{
					"name": "Seat - Healthcheck",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/seat/health/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"seat",
								"health",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Seat - Reserve",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_id\": \"123456789\",\r\n    \"match_id\": \"987654321\",\r\n    \"ticket_category\": \"A\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/seat/reserve/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"seat",
								"reserve",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Seat - Release",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"serial_no\": \"12345\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/seat/release/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"seat",
								"release",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Seat - validate",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"serial_no\": \"12345\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/seat/validate_reservation/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"seat",
								"validate_reservation",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Match",
			"item": [
				{
					"name": "Matches - Get Details",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Query($_id: String!) {\n    match_details (_id: $_id) {\n        _id,\n        name,\n        description,\n        venue,\n        home_team,\n        away_team,\n        home_score,\n        away_score,\n        date,\n        seats\n    }\n}",
								"variables": "{\n    \"_id\": \"65f40de537374675b8b0751a\"\n}"
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/match",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"match"
							]
						}
					},
					"response": []
				},
				{
					"name": "Matches - Get All Overview",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n    matches_overview {\n        _id,\n        name,\n        home_team,\n        away_team,\n        home_score,\n        away_score,\n        date,\n        seats\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/match",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"match"
							]
						}
					},
					"response": []
				},
				{
					"name": "Matches - Add New Match",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation Mutation (\n    $name: String!,\n    $home_team: String!,\n    $away_team: String!,\n    $date: String!,\n    $seats: Int!,\n    $categories: [CategoryInput]!\n) {\n    createMatch (\n        name: $name,\n        home_team: $home_team,\n        away_team: $away_team,\n        date: $date,\n        seats: $seats,\n        categories: $categories\n        ) {\n        name,\n        home_team,\n        away_team,\n        date,\n        seats,\n        categories {\n            category,\n            quantity\n        }\n    }\n}",
								"variables": "{\n    \"name\": \"Asian Cup Finals\",\n    \"home_team\": \"Lion City Sailors\",\n    \"away_team\": \"Tottenham Hotspurs\",\n    \"date\": \"2024-01-01\",\n    \"seats\": 10,\n    \"categories\": [\n        { \"category\": \"A\", \"quantity\": 3 },\n        { \"category\": \"B\", \"quantity\": 7 }\n    ]\n\n}"
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/match",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"match"
							]
						}
					},
					"response": []
				},
				{
					"name": "Matches - INIT DATA",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateMatch {\n  createMatch(\n    name: \"Champions League Final\",\n    home_team: \"Team A\",\n    away_team: \"Team B\",\n    date: \"2023-05-28\",\n    seats: 10,\n    categories: [\n      { name: \"A\", quantity: 0 },\n      { name: \"B\", quantity: 2 },\n      { name: \"C\", quantity: 8 }\n    ]\n  ) {\n    _id\n    name\n    home_team\n    away_team\n    date\n    seats\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "localhost:8000/api/v1/match",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"match"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Check Rabbit",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:15672",
					"host": [
						"localhost"
					],
					"port": "15672"
				}
			},
			"response": []
		},
		{
			"name": "Check Kong",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8002",
					"host": [
						"localhost"
					],
					"port": "8002"
				}
			},
			"response": []
		},
		{
			"name": "Check Mongo",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:27017",
					"host": [
						"localhost"
					],
					"port": "27017"
				}
			},
			"response": []
		},
		{
			"name": "Sample - HealthCheck for Seat Microservice",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8000/seat/health/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"seat",
						"health",
						""
					]
				}
			},
			"response": []
		}
	]
}