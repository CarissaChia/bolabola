openapi: 3.1.0
info:
  version: 1.0.0
  title: BolaBola API
  termsOfService: https://bolabola.smuaws.com/terms/
  contact:
    name: Contact BolaBola Support
    email: support@bolabola.com
    url: http://bolabola.smuaws.com/contact
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  x-logo:
    url: "https://bolabola.com/logo.png"
    altText: BolaBola logo
  description: >
    This is the **BolaBola** API to demonstrate the functionalities of the BolaBola application.

    # Introduction

    The BolaBola API is designed to provide developers with a comprehensive toolset for integrating with our platform, offering access to our core features and functionalities.

    It also demonstrates the use of the OpenAPI specification to document APIs in a clear and concise manner, facilitating easier integration and understanding of the available API endpoints.

    # OpenAPI Specification

    The OpenAPI Specification offers a wide-ranging and language-agnostic interface to RESTful APIs, enabling both humans and computers to discover and understand the capabilities of a service without direct access to the source code or extensive documentation.

    By adhering to the OpenAPI Specification, we aim to provide a seamless and straightforward experience for developers looking to integrate with the BolaBola platform, ensuring that the available services are easily accessible and understandable.
externalDocs:
  description: "Learn more about integrating with the BolaBola API."
  url: "https://bolabola.com/docs/api"
tags:
  - name: Matches
    description: "Operations related to match scheduling and information."
  - name: Tickets
    description: "Ticket purchasing and management operations."
  - name: Users
    description: "User account management and profile operations."
  - name: Notifications
    description: "User notifications and alerts."
x-tagGroups:
  - name: Core Features
    tags:
      - Matches
      - Tickets
  - name: User Management
    tags:
      - Users
      - Notifications
servers:
  - url: https://{tenant}.bolabola.smuaws.com/api/v1
    variables:
      tenant:
        default: app
        description: Your tenant id
  - url: https://api.bolabola.com/v1
paths:
  "/users/{userId}":
    get:
      tags:
        - Users
      summary: Retrieve User Information
      description: Fetches the details of a user given their unique userId. This includes basic user information along with associated tickets.
      parameters:
        - name: userId
          in: path
          required: true
          description: The unique identifier of the user whose information is being retrieved.
          schema:
            type: string
      responses:
        "200":
          description: User information retrieved successfully, including any tickets associated with the user.
        "404":
          description: User not found.
    post:
      tags:
        - Users
      summary: Register a New User
      description: Registers a new user in the system. This endpoint requires a JSON payload containing the new user's information.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas/newuser.yml#/NewUser"
      responses:
        "201":
          description: New user has been successfully created.
        "400":
          description: Invalid input provided.
    put:
      tags:
        - Users
      summary: Update Existing User Information
      description: Updates the information of an existing user identified by their userId. Requires a JSON payload with the updated user information.
      parameters:
        - name: userId
          in: path
          required: true
          description: The unique identifier of the user whose information is to be updated.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas/updateuser.yml#/UpdateUser"
      responses:
        "200":
          description: User information updated successfully.
        "404":
          description: User not found.
        "400":
          description: Invalid input provided.
    delete:
      tags:
        - Users
      summary: Remove a User
      description: Deletes a user from the system using their unique userId. This action is irreversible.
      parameters:
        - name: userId
          in: path
          required: true
          description: The unique identifier of the user to be deleted.
          schema:
            type: string
      responses:
        "204":
          description: User deleted successfully.
        "404":
          description: User not found.
  "/matches/{matchId}":
    get:
      tags:
        - Matches
      summary: Get match details
      description: Retrieves the details of a match by its unique matchId.
      parameters:
        - name: matchId
          in: path
          required: true
          description: The unique identifier of the match.
          schema:
            type: string
      responses:
        "200":
          description: Successfully retrieved match details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  name:
                    type: string
                  home_team:
                    type: string
                  away_team:
                    type: string
                  home_score:
                    type: integer
                  away_score:
                    type: integer
                  date:
                    type: string
                    format: date-time
                  seats:
                    type: integer
                  categories:
                    type: array
                    items:
                      type: object
                      properties:
                        category:
                          type: string
                        quantity:
                          type: integer
    post:
      tags:
        - Matches
      summary: Create a new match
      description: Creates a new match with the provided details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - home_team
                - away_team
                - date
                - seats
                - categories
              properties:
                name:
                  type: string
                home_team:
                  type: string
                away_team:
                  type: string
                date:
                  type: string
                  format: date-time
                seats:
                  type: integer
                categories:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      quantity:
                        type: integer
      responses:
        "201":
          description: Match created successfully.
    put:
      tags:
        - Matches
      summary: Update match details
      description: Updates the details of an existing match identified by its matchId.
      parameters:
        - name: matchId
          in: path
          required: true
          description: The unique identifier of the match to update.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                home_team:
                  type: string
                away_team:
                  type: string
                home_score:
                  type: integer
                away_score:
                  type: integer
                date:
                  type: string
                  format: date-time
                seats:
                  type: integer
                categories:
                  type: array
                  items:
                    type: object
                    properties:
                      category:
                        type: string
                      quantity:
                        type: integer
      responses:
        "200":
          description: Match updated successfully.
    delete:
      tags:
        - Matches
      summary: Delete a match
      description: Deletes a match from the system using its unique matchId. This action is irreversible.
      parameters:
        - name: matchId
          in: path
          required: true
          description: The unique identifier of the match to be deleted.
          schema:
            type: string
      responses:
        "204":
          description: Match deleted successfully.
  "/seat":
    get:
      tags:
        - Tickets
      summary: Get seat information
      description: Retrieves information about available seats for a match.
      parameters:
        - name: matchId
          in: query
          required: true
          description: The unique identifier of the match to retrieve seat information for.
          schema:
            type: string
      responses:
        "200":
          description: Seat information retrieved successfully.
  "/notifications":
    $ref: "paths/notifications.yaml"
components:
  securitySchemes:
    bolabola_auth:
      description: "OAuth2 authentication for accessing BolaBola APIs."
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://bolabola.com/oauth/authorize
          tokenUrl: https://bolabola.com/oauth/token
          scopes:
            "read:matches": View match information
            "write:tickets": Purchase and manage tickets
    api_key:
      description: "API key authentication for accessing BolaBola APIs."
      type: apiKey
      in: header
      name: X-BolaBola-API-Key
